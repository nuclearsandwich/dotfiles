set-option -g prefix C-Space
unbind-key C-b
bind-key Space send-prefix

set-option -g status-left-length 24
set-option -g status-right-length 64

set-option -g status-right "#(pwd) | #(thisbranch)"


# Everything below here originally came from Brian Hogan's tmux book.

set-option -sg escape-time 1
set-option -g default-terminal "screen-256color"

set-option -g base-index 1
set-window-option -g pane-base-index 1

#set-window-option -g mode-mouse off

bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf!"

bind-key c new-window -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
